#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include unistd.h>
#include <signal.h>
#include <errno.h>

#define GEO_LENGTH 8
#define GEO_WAIT_INTERVAL 6

void getPIN (char pin [GEO_LENGTH + 1])
{
srand (getpid() + getppid());
pin[0] = 50 + rand() % 9;

for (int x = 1; x < GEO_LENGTH; x++)
{
pin[x] = 49 + rand() % 7;
}

int main (void)
{
while(1)
{
int pipefds[2];
char name;
char pin [GEO_LENGTH + 1];
char buffer [GEO_LENGTH + 1];
void sigint_handler (int sig);
char s [100];

if (signal (SIGINT, sigint_handler) == SIG_ERR)
{
perror ("signal");
exit(1);
}

pipe (pipefds);
pid_t pid = fork();

if (pid == 0)
{
getPIN (pin);
close (pipefds[0]);
write (pipefds[1], pin, GEO_LENGTH + 1);

printf ("Generating your number...\n");
printf ("Enter your name: ");
fgets (name, 100, stdin);
printf ("Number for %s>", name);

sleep (GEO_WAIT_INTERVAL);

exit (EXIT_SUCCESS);
}

if (pid > 0)
{
wait (NULL);

close (pipefds[1]);
read (pipefds [0], buffer, GEO_LENGTH + 1);
close (pipefds[0]);

printf ("%s\n\n", buffer);
}
}
return 0;
return EXIT_SUCCESS;
}

void sigint_handler (int sig)
{
printf ("\nPROCESSABORTED\n");
}
